#+TITLE: git
#+AUTHOR: Pavel Popov


* my .gitconfig

#+BEGIN_SRC conf
[user]
  name = Pavel Popov
[core]
  excludesfile = ~/.gitignore_global
  editor = vim
[color]
  ui = auto
[push]
  default = simple

[diff]
  tool = araxis
  guitool = araxis

[diff.tool "araxis"]
  path = /Applications/Araxis Merge.app/Contents/Utilities/compare
  cmd = /Applications/Araxis Merge.app/Contents/Utilities/compare

[merge]
  tool = araxis
  guitool = araxis

[merge.tool "araxis"]
  path = /Applications/Araxis Merge.app/Contents/Utilities/compare
  cmd = /Applications/Araxis Merge.app/Contents/Utilities/compare

[alias]
  lol = log --graph --decorate --pretty=oneline --abbrev-commit
  lola = log --graph --decorate --pretty=oneline --abbrev-commit --all

  # http://gggritso.com/human-git-aliases
  unstage = reset -q HEAD --
  discard = checkout --
  nevermind = !git reset --hard HEAD && git clean -d -f
  uncommit = reset --mixed HEAD~
  save = commit -m
  resave = commit --amend
  invert = revert
  last = log -1 HEAD --format=format:"%Cred%H"
  summary = status -u -s
  graph = log --graph --branches --remotes --tags  --format=format:'%Cgreen%h %Creset‚Ä¢ %<(75,trunc)%s (%cN, %ar) %Cred%d' --date-order
  history = log --format=format:'%Cgreen%h %Creset‚Ä¢ %s (%cN, %ar)'
  branchout = checkout -b
  tags = tag
  branches = branch -a
  stashes = stash list
  remotes = remote -v
  prestage = diff -w --word-diff=color
  precommit = diff --cached -w --word-diff=color --word-diff-regex='[^[:space:]<>]+'
  move = mv
  remove = rm
  unmerged = branch --no-merged
  unstash = stash pop
  what = show -w
  untrack = rm -r --cached
  rewrite = rebase -i
  amend = commit --amend
  back = checkout "-"
  contributors = shortlog -s -n
  filetrail = git log --follow -p -w
  mergetrail = log --ancestry-path --merges
  unmerged = diff --name-only --diff-filter=U
#+END_SRC


* Pushing to multiple remotes with one command

There's a question on StackOverflow - [[http://stackoverflow.com/questions/5785549/able-to-push-to-all-git-remotes-with-the-one-command][Able to push to all git remotes with the one command?]].

The solution is to create remote named "all" and place multiple urls there:

#+BEGIN_SRC conf
[remote "all"]
url = origin-host:path/proj.git
url = nodester-host:path/proj.git
url = duostack-host:path/proj.git
#+END_SRC

Now one's able to push the project to all Gitlab, Github and Bitbucket with just one command - "git push all master".


* Merging multiple commits in single commit in GIT

Use ~git rebase --interactive <ref>~.

This will pick up editor with the list of commits to rebase where we can choose what to do with each commit. To merge multiple commits in the single commit we need to keep first commit and squash all the others:

#+BEGIN_SRC txt
keep b76d157 first commit after ref
s    a931ac7 second commit after ref
s    23987dd third commit after ref
#+END_SRC

On the next step you'll be prompted to put new commit message for rebased commit.


** References

- [[http://stackoverflow.com/questions/2563632/how-can-i-merge-two-commits-into-one][How can I merge two commits into one? - StackOverflow]]

* Octotree - plugin for GitHub
Shows nice source code tree

* References
- [[http://gggritso.com/human-git-aliases][Human git aliases]]
